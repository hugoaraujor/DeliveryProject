@using Adomicilio.Models
@model Adomicilio.Models.Empresa

@{
    ViewBag.Title = "Empresas";
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<!--My comment@using (Html.BeginForm()) -->
<!-- using (Html.BeginForm("uploadfiles", "home", FormMethod.Post, new Dictionary<string, object>() { { "type", "file" } })) -->
    @using (Html.BeginForm("Create", "Empresas", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdEmpresa)
        @Html.HiddenFor(model => model.logo)
        @Html.HiddenFor(model => model.DateCreated,Model.DateCreated=DateTime.Now)
        @Html.HiddenFor(model => model.DateEdited)
        @Html.HiddenFor(model => model.imagenurl)
        @Html.HiddenFor(model => model.tipodelivery)
        @Html.HiddenFor(model => model.User)
        @Html.HiddenFor(model => model.claveuser)
        <div class="form-horizontal ">
            <h2>Empresa</h2>
            <center><h4>Agregue los siguientes detalles.</h4></center>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">

                @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label col-md-5" })

                <div class="col-md-6">
                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RIF, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.RIF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RIF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefonos, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Telefonos, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefonos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Slogan, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Slogan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Slogan, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label  col-md-5">Categoria</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.CategoriaLocal, ListHelper.SelectListItemHelper.GetCategoriasempresa(), new
                   {
                                                   @class = "form-control required"
                     })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label  col-md-5">Especialidad</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.TipodeComida, ListHelper.SelectListItemHelper.Getespecialidades(), new
         {
             @class = "form-control required"
         })
                </div>
            </div>

             <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Direccion, 2, 200, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label  col-md-5">Estado</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.idEstado, ListHelper.SelectListItemHelper.GetEstadosList(1), new
                   {
                       @class = "form-control required",
                       @onchange = "FillCity()"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label  col-md-5">Ciudad</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.idCiudad, ListHelper.SelectListItemHelper.GetCiudadesList(Model.idEstado), new
                   { @class = "form-control required" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.horario1, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.horario1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.horario1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contacto, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Contacto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contacto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Delivery, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.logo, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                  <input type="file" name="file1" value=""/>                 
                </div>
            </div>



            @Html.HiddenFor(model => model.Valoracion)
            @Html.HiddenFor(model => model.like)
            @Html.HiddenFor(model => model.Activa)
            @Html.HiddenFor(model => model.DateCreated)
            <div class="form-group">
                <div class="col-md-offset-8 ">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function FillCity() {
           var stateId = document.getElementById("idEstado").value;
            $.ajax({
                url: '/Account/FillCity',
                type: "GET",
                dataType: "JSON",
                data: { id: stateId },
                success: function (cities) {
                    $("#idCiudad").html(""); // clear before appending new list
                    $("#idCiudad").append($('<option>-------Seleccione-------</option>').val(""));
                    $.each(cities, function (i, city) {
                        $("#idCiudad").append($('<option>' + city.ciudad + '</option>').val(city.CiudadId));
                    });
                    
                },

            });

        }
    </script>
}


