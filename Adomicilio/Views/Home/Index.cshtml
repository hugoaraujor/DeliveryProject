@using Adomicilio.Models
@model Adomicilio.Models.IndexViewModel
@using PagedList.Mvc;
@{ 
    var auxrestaurantes = Model.restaurante;

}
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@Html.AntiForgeryToken()
 <div class="span12">
    <div class="carousel slide row-fluidbs-slider"  id="myCarousel"  data-ride="carousel" >
        <div class="carousel-inner ">
            <div class="item active">
                <div class="bannerImage">
                   <a href="#"><img src="~/images/image1.png" alt=""></a>
                </div>
            </div><!-- /Slide1 -->
            <div class="item">
                <div class="bannerImage">
                    <a href="#"><img src="~/images/image2.png" alt=""></a>
                </div>
            </div><!-- /Slide2 -->
            <div class="item">
                <div class="bannerImage">
                    <a href="#"><img src="~/images/image4.png" alt=""></a>
                </div>
            </div><!-- /Slide2 -->
        </div>
        <div class="control-box">
            <a data-slide="prev" href="#myCarousel" class="carousel-control left btn-circle">‹</a>
            <a data-slide="next" href="#myCarousel" class="carousel-control right btn-circle">›</a>
        </div><!-- /.control-box -->
    </div><!-- /#myCarousel -->

    <div class="row">
        <form class="navbar-form navbar especial" role="search" name="forma" id="forma">

            @Html.HiddenFor(m => m.menuopcion)
            <div class="form-group">
                <div class="col-2">
                    <label class="glyphicon glyphicon-record"></label>
                    @Html.DropDownListFor(m => m.ciudad, ListHelper.SelectListItemHelper.GetCiudadesList(24), new
               {
                   @class = "form-control required place-holder",
                   @onchange = "FillSector()",
                   @onmouseup = "FillSector",
                   @Model.ciudad

               })


                </div>
            </div>

            <div class="form-group ">
                <div class="col-2">
                    <label>Buscar</label>
                    <input type="text" class="form-control" placeholder="Search" value="@Model.Searchstr">
                </div>
            </div>



            <button type="submit" class="btn btn-default" onclick="savelocal()">Submit</button>

        </form>
    </div>
            
</div>


        <div class="row">
            <ol class="breadcrumb">
                <li><a href="#">Inicio</a></li>
                <li><a href="#">Catalogo</a></li>
                <li> </li>
            </ol>
            

         
           
            </div>
            <div class="catmenu">
                <div class="col-md-2 col-lg-2">
                    <ul class="list-group" >
                        <li class="list-group-item"><a href="javascript:choose(0);">Todos</a></li>
                        @foreach (var item in Model.ListaEspecialidades)
                        {
                        <li class="list-group-item" ><a href="javascript:choose(@item.IdEspecialidad);">@item.EspecialidadDesc</a></li >
                        }
                    </ul>
                </div> 
            </div>
                  
            <div id="Details" class="col-md-8 col-lg-8">
    @if (Model.restaurante.Count > 0)
    {
        @Html.Partial("StoresView")

    }
    else
    {   <div class="row">
                    <div class="col-md-8 col-lg-8">
                        <p>sjdkflahjksdfahsdf</p>
                    </div>
                </div>
    }
     </div>

    <div class="CarritoAd col-md-2 col-lg-2">
        <center>Carrito de compra</center>
    </div>

<div class="col-md-12">
    <div class="row">
        <div id='Paging' style="text-align: center">
         

            @Html.PagedListPager(Model.restaurante, page => Url.Action("Index", new { page }))
            Pagina @(Model.restaurante.PageCount < Model.restaurante.PageNumber ? 0 : Model.restaurante.PageNumber)
            de @Model.restaurante.PageCount
        </div>
           </div>
</div>

<div class="center"><button data-toggle="modal" data-target="#squarespaceModal" class="btn btn-primary center-block">Click Me</button></div>
<!-- line modal -->
<form action="/" method="post" >
    <div class="modal fade" id="squarespaceModal" name="squarespaceModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                    <h3 class="modal-title" id="lineModalLabel">My Modal</h3>
                </div>
                <div class="modal-body" id="formcontact">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <p>@ViewBag.error1</p>
                        <div class="form-group">
                            @Html.LabelFor(model => model.contact.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contact.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contact.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.contact.email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contact.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contact.email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.contact.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contact.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contact.Telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.contact.TipodeContacto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(x => x.contact.TipodeContacto, "Seleccione", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.contact.TipodeContacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.contact.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.contact.Descripcion, 6, 100, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contact.Descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.contact.DateCreated, DateTime.Now)
                        <input id="iscontact" name="iscontact" type="hidden" value="true" />

                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Submit" />
                    <div class="btn-group btn-group-justified" role="group" aria-label="group button">
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-default" data-dismiss="modal" role="button">Close</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
   </form>
    @Scripts.Render("~/bundles/jquery")
    @section Scripts {
        @if (@Model.iscontact)
        {
            <script>
                $('#squarespaceModal').modal({ show: 'true' });
          //      $('#squarespaceModal').html("");
            </script>
        }
        else
        { Model.contact = new Contacto();
            Model.contact.Nombre = "";
            <script>
                $("#contact_Nombre").html("");
                $("#contact_email").html("");
                $("#contact_Telefono").html("");
                $("#contact_Descripcion").html("");

             </script>
        }
                <script>

                    <!--


        window.status = "";
        var vciudad = 0;

      if (localStorage.getItem("Ciudad") != null) {
          var vciudad = localStorage.getItem('Ciudad');
          document.getSelection("ciudad").value = vciudad;
          FillCity();
          enviar(0);
      } else {
                        vciudad = document.getSelection("ciudad").value.toString();
                    FillCity();
      }

       // Carousel Auto-Cycle
      $(document).ready(function () {
                        leelocal();
                    $('.carousel').carousel({
                        interval: 10000
        })


    });

      function choose(number) {
          var cityId = document.getElementById("ciudad").value;
          document.getElementById("menuopcion").value = number;
          document.forma.submit();
      }


      function leelocal() {
                        FillCity();
                    }
    function savelocal() {
        var cityId = document.getElementById("Ciudad").value.toString();
        localStorage.setItem('ciudad', cityId);
        var scity = localStorage.getItem('ciudad');
    }
    function Fill() {
                        FillCity();
                    }
        function FillCity() {
            var stateId = 24;

            $.ajax({
                        url: '/Account/FillCity',
                type: "GET",
                dataType: "JSON",
                data: {id: stateId },
                success: function (cities) {
                        $("#Ciudad").html(""); // clear before appending new list
                    $("#Ciudad").append($('<option>-------Seleccione-------</option>').val(""));
                    $.each(cities, function (i, city) {
                        $("#Ciudad").append($('<option>' + city.ciudad + '</option>').val(city.CiudadId));
                    });
                    $("#Ciudad").val(vciudad);
                },

            });


       }


   //--> </script>

        }



