@using Adomicilio.Models
@model RegisterViewModel
@{
    ViewBag.Title = "Registro";
   
}
<h2>@ViewBag.Title.</h2>
<h3 class="titulo1"><strong>Estas a solo tres pasos</strong></h3>
<h4 class="instrucciones">Ingresa los valores solicitados para llenar tu registro en nuestra Página es rapido y sencillo presiona</h4>
<h4 class="instrucciones">el boton siguiente para especificar datos adicionales</h4>
 
   
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="row">
                        <div class="stepwizard">
                            <div class="stepwizard-row setup-panel col-md-10">
                                <div class="stepwizard-step col-md-4">
                                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>

                                </div>
                                <div class="stepwizard-step col-md-4">
                                    <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>

                                </div>
                                <div class="stepwizard-step col-md-4">
                                    <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>

                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <form role="form">
                                <div class="row setup-content" id="step-1">
                                    <div class="col-xs-10">
                                        <div class="col-md-10">
                                            <h3>Paso 1</h3>
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Correo electrónico</label>
                                                <div class="col-md-10">
                                                    <input id="Email" name="Email" maxlength="200" type="text" required="required" class="form-control" placeholder="Direccion de Correo" value=@Model.Email />
                                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Contraseña</label>
                                                <div class="col-md-10">
                                                    <input id="Password" name="Password" minlength="8" maxlength="20" type="text" required="required" class="form-control" placeholder="Contraseña" value=@Model.Password />
                                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                                </div>
                                                @Html.HiddenFor(m => m.Pais)
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-md-2">Confirme Contraseña</label>
                                                <div class="col-md-10">
                                                    <input id="ConfirmPassword" name="ConfirmPassword" minlength="8" maxlength="20" type="text" required="required" class="form-control" placeholder="Repetir Contraseña" value=@Model.ConfirmPassword />
                                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Nombres</label>
                                                <div class="col-md-10">
                                                    <input id="Nombres" name="Nombres" maxlength="200" type="text" required="required" class="form-control" placeholder="Su(s) Nombre(s)" value=@Model.Nombres />
                                                    @Html.ValidationMessageFor(m => m.Nombres, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Apellidos</label>
                                                <div class="col-md-10">
                                                    <input id="Apellidos" name="Apellidos" maxlength="200" type="text" required="required" class="form-control" placeholder="Su(s) Apellido(s)" value=@Model.Apellidos />
                                                    @Html.ValidationMessageFor(m => m.Apellidos, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Sexo</label>
                                                <div class="col-md-10">
                                                    <select id="Sexo" name="Sexo" min="1" type="text" required="required" class="form-control" value=@Model.Sexo>
                                                        <option value="1">Masculino</option>
                                                        <option value="2">Femenino</option>
                                                    </select>
                                                    @Html.ValidationMessageFor(m => m.Sexo, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <button class="btn btn-primary nextBtn btn-lg pull-right" type="button">Next</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row setup-content" id="step-2">
                                    <div class="col-xs-10">
                                        <div class="col-md-10">
                                            <h3> Step 2</h3>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Telefono</label>
                                                <div class="col-md-10">
                                                    <input id="PhoneNumber" name="PhoneNumber" maxlength="30" type="text" required="required" class="form-control" placeholder="Telefono Fijo" value=@Model.PhoneNumber />
                                                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Movil</label>
                                                <div class="col-md-10">
                                                    <input id="movil" name="movil" maxlength="30" type="text" required="required" class="form-control" placeholder="Movil" value=@Model.movil />
                                                    @Html.ValidationMessageFor(m => m.movil, "", new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Estado</label>
                                                <div class="col-md-10">
                                                    @Html.DropDownListFor(m => m.Estado, ListHelper.SelectListItemHelper.GetEstadosList(Model.Pais), new
                                                   { @class = "form-control required", @onchange = "FillCity()"
                                                   })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label  col-md-2">Ciudad</label>
                                                <div class="col-md-10">
                                                    @Html.DropDownListFor(m => m.Ciudad, ListHelper.SelectListItemHelper.GetCiudadesList(Model.Estado), new
                                                   {
                                                       @class = "form-control required"
                                                   })
                                                </div>
                                            </div>

                                            <button class="btn btn-primary nextBtn btn-lg pull-right" type="button">Next</button>
                                        </div>
                                    </div>

                                </div>
                                <div class="row setup-content" id="step-3">
                                    <div class="col-xs-10">
                                        <div class="col-md-10">
                                            <h3> Step 3</h3>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.aceptapublicidad, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    <div class="checkbox">
                                                        @Html.EditorFor(m => m.aceptapublicidad)
                                                        @Html.ValidationMessageFor(m => m.aceptapublicidad, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(m => m.aceptaterminosdeuso, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    <div class="checkbox">
                                                        @Html.EditorFor(m => m.aceptaterminosdeuso)
                                                        @Html.ValidationMessageFor(m => m.aceptaterminosdeuso, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <button class="btn btn-success btn-lg pull-right" type="submit">Finish!</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>



                    </div>
                </div>
            
            }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
    <script>
        function FillCity() {
          
            var stateId = $('#Estado').val();
            $.ajax({
                url: '/Account/FillCity' ,
                type: "GET",
                dataType: "JSON",
                data: { id: stateId },
                success: function (cities) {
                    $("#Ciudad").html(""); // clear before appending new list
                    $.each(cities, function (i, city) { $("#Ciudad").append($('<option>' + city.ciudad + '</option>').val(city.CiudadId)); });
                }
            });
        }
    </script>

            <script>
                $(document).ready(function () {
                    var navListItems = $('div.setup-panel div a'),
                        allWells = $('.setup-content'),
                        allNextBtn = $('.nextBtn');

                    allWells.hide();

                    navListItems.click(function (e) {
                        e.preventDefault();
                        var $target = $($(this).attr('href')),
                            $item = $(this);

                        if (!$item.hasClass('disabled')) {
                            navListItems.removeClass('btn-primary').addClass('btn-default');
                            $item.addClass('btn-primary');
                            allWells.hide();
                            $target.show();
                            $target.find('input:eq(0)').focus();
                        }
                    });

                    allNextBtn.click(function () {
                        var curStep = $(this).closest(".setup-content"),
                            curStepBtn = curStep.attr("id"),
                            nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                            curInputs = curStep.find("input[type='text'],input[type='url']"),
                            isValid = true;

                        $(".form-group").removeClass("has-error");
                        for (var i = 0; i < curInputs.length; i++) {
                            if (!curInputs[i].validity.valid) {
                                isValid = false;
                                $(curInputs[i]).closest(".form-group").addClass("has-error");
                            }
                        }

                        if (isValid)
                            nextStepWizard.removeAttr('disabled').trigger('click');
                    });

                    $('div.setup-panel div a.btn-primary').trigger('click');
                });
            </script>
        }

